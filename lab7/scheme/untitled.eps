%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Майкрософт Windows 10 Pro (Registered Trademark).
%%Title: C:\Users\Анастасия\Documents\MATLAB\untitled.eps
%%CreationDate: 05/22/2017  17:19:28
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
88 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3911 0 0 -3082 655 3366 4 MP
PP
-3911 0 0 3082 3911 0 0 -3082 655 3366 5 MP stroke
4 w
DO
0 sg
 655 3366 mt  655  284 L
 655  284 mt  655  284 L
1438 3366 mt 1438  284 L
1438  284 mt 1438  284 L
2220 3366 mt 2220  284 L
2220  284 mt 2220  284 L
3002 3366 mt 3002  284 L
3002  284 mt 3002  284 L
3784 3366 mt 3784  284 L
3784  284 mt 3784  284 L
4566 3366 mt 4566  284 L
4566  284 mt 4566  284 L
 655 3366 mt 4566 3366 L
4566 3366 mt 4566 3366 L
 655 2925 mt 4566 2925 L
4566 2925 mt 4566 2925 L
 655 2485 mt 4566 2485 L
4566 2485 mt 4566 2485 L
 655 2045 mt 4566 2045 L
4566 2045 mt 4566 2045 L
 655 1604 mt 4566 1604 L
4566 1604 mt 4566 1604 L
 655 1164 mt 4566 1164 L
4566 1164 mt 4566 1164 L
 655  724 mt 4566  724 L
4566  724 mt 4566  724 L
 655  284 mt 4566  284 L
4566  284 mt 4566  284 L
SO
6 w
 655  284 mt 4566  284 L
 655 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 655 3366 mt  655  284 L
 655 3366 mt 4566 3366 L
 655 3366 mt  655  284 L
 655 3366 mt  655 3326 L
 655  284 mt  655  323 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 622 3511 mt 
(0) s
1438 3366 mt 1438 3326 L
1438  284 mt 1438  323 L
1405 3511 mt 
(2) s
2220 3366 mt 2220 3326 L
2220  284 mt 2220  323 L
2187 3511 mt 
(4) s
3002 3366 mt 3002 3326 L
3002  284 mt 3002  323 L
2969 3511 mt 
(6) s
3784 3366 mt 3784 3326 L
3784  284 mt 3784  323 L
3751 3511 mt 
(8) s
4566 3366 mt 4566 3326 L
4566  284 mt 4566  323 L
4500 3511 mt 
(10) s
 655 3366 mt  695 3366 L
4566 3366 mt 4526 3366 L
 385 3410 mt 
(-1.5) s
 655 2925 mt  695 2925 L
4566 2925 mt 4526 2925 L
 485 2969 mt 
(-1) s
 655 2485 mt  695 2485 L
4566 2485 mt 4526 2485 L
 385 2529 mt 
(-0.5) s
 655 2045 mt  695 2045 L
4566 2045 mt 4526 2045 L
 555 2089 mt 
(0) s
 655 1604 mt  695 1604 L
4566 1604 mt 4526 1604 L
 455 1648 mt 
(0.5) s
 655 1164 mt  695 1164 L
4566 1164 mt 4526 1164 L
 555 1208 mt 
(1) s
 655  724 mt  695  724 L
4566  724 mt 4526  724 L
 455  768 mt 
(1.5) s
 655  284 mt  695  284 L
4566  284 mt 4526  284 L
 555  328 mt 
(2) s
 655  284 mt 4566  284 L
 655 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 655 3366 mt  655  284 L
gs 656 284 3911 3083 rc
24 w
/c8 { 0.200000 0.600000 1.000000 sr} bdef
c8
46 0 78 0 79 0 73 1 78 0 71 0 75 0 76 0 
71 0 78 0 69 0 73 0 75 0 67 0 74 1 67 0 
70 0 78 0 64 1 69 0 71 1 63 0 69 1 66 1 
63 1 69 2 63 1 64 1 70 2 60 2 64 3 71 4 
58 4 63 5 70 7 57 6 62 6 69 8 56 7 60 9 
68 12 55 14 59 20 66 30 55 30 57 36 63 39 55 31 
54 26 59 24 57 23 52 31 56 57 60 105 51 135 55 192 
59 253 53 233 49 194 42 125 28 52 23 21 12 4 3 0 
656 284 65 MP stroke
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
46 2 78 4 79 -2 73 -6 78 -5 71 2 75 8 76 7 
71 -1 78 -10 69 -10 73 -2 75 12 67 15 74 6 67 -10 
70 -21 78 -17 64 8 69 27 71 27 63 4 69 -27 66 -41 
63 -24 69 15 63 47 64 52 70 16 60 -40 64 -75 71 -64 
58 9 63 77 70 117 57 51 62 -39 69 -143 56 -126 60 -54 
68 99 55 175 59 177 66 49 55 -132 57 -256 63 -253 55 -52 
54 168 59 362 57 341 52 132 56 -164 60 -466 51 -436 55 -242 
59 215 53 598 49 724 42 556 28 251 23 106 12 20 3 0 
656 284 65 MP stroke
/c10 { 1.000000 0.200000 0.400000 sr} bdef
c10
46 -28 78 171 79 192 73 -77 78 -255 71 -56 75 227 76 206 
71 -112 78 -307 69 -54 73 265 75 255 67 -111 74 -352 67 -125 
70 257 78 367 64 -47 69 -382 71 -266 63 177 69 444 66 172 
63 -283 69 -478 63 -87 64 383 70 494 60 -1 64 -473 71 -498 
58 94 63 552 70 486 57 -167 62 -618 69 -488 56 210 60 675 
68 523 55 -224 59 -722 66 -595 55 193 57 758 63 698 55 -88 
54 -721 59 -838 57 -136 52 617 56 961 60 467 51 -444 55 -995 
59 -767 53 237 49 941 42 953 28 478 23 209 12 40 3 1 
656 284 65 MP stroke
gr

24 w
c10
0 sg
2527 3654 mt 
(t, \361) s
 303 1916 mt  -90 rotate
(e\(t\)) s
90 rotate
 639 3409 mt 
( ) s
4550  326 mt 
( ) s
6 w
1 sg
0 480 769 0 0 -480 3737 824 4 MP
PP
-769 0 0 480 769 0 0 -480 3737 824 5 MP stroke
4 w
DO
SO
6 w
0 sg
3737  344 mt 4506  344 L
3737  824 mt 4506  824 L
4506  824 mt 4506  344 L
3737  824 mt 3737  344 L
3737  824 mt 4506  824 L
3737  824 mt 3737  344 L
3737  344 mt 4506  344 L
3737  824 mt 4506  824 L
4506  824 mt 4506  344 L
3737  824 mt 3737  344 L
4197  479 mt 
(k=1) s
gs 3737 344 770 481 rc
24 w
c8
354 0 3807 436 2 MP stroke
gr

24 w
c8
0 sg
4197  627 mt 
(k=5) s
gs 3737 344 770 481 rc
c9
354 0 3807 584 2 MP stroke
gr

c9
0 sg
4197  775 mt 
(k=10) s
gs 3737 344 770 481 rc
c10
354 0 3807 731 2 MP stroke
6 w
gr

6 w
c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
